import asyncio
import os
import logging
from telethon import TelegramClient
from telethon.sessions import StringSession
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(filename = "C:\\Users\\Windows\\Documents\\tg_spam\\log.txt", level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s' , encoding='utf-8' )

# –í–≤–µ–¥–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–æ–ª—É—á–∏–ª –Ω–∞ —Å–∞–π—Ç–µ my.telegram.org
api_id = '24567310'
api_hash = 'c28c7db6566293ceb5d02a3f964e65f3'
phone_number = '+79789493049'

session_string = os.getenv('TELEGRAM_SESSION')

if session_string:
    client = TelegramClient(StringSession(session_string), api_id, api_hash)
else:
    client = TelegramClient(StringSession(), api_id, api_hash)
# –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è
message = """üì¢ –ò—â–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤! 

üìÜ –í–æ–∑—Ä–∞—Å—Ç –æ—Ç 16 –ª–µ—Ç –∏ —Å—Ç–∞—Ä—à–µ! 

üíµ –ü–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ , –æ–ø–ª–∞—Ç–∞ –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ç–∞–∫ –∏ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—Å–Ω–æ–≤–µ ! 

‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
1) üíª –ù–∞–ª–∏—á–∏–µ avito –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! üíª
2) üí≥ –ù–∞–ª–∏—á–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π/–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –æ—Å–Ω–æ–≤–µ ! üí∏

üíª –í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ  : 
üë®‚Äçüíª–ù—É–∂–Ω–æ –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤—ã –∏ –ø—Ä–æ–¥–≤–∏python tg_send.py
–≥–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ avito , –∫–∞–∂–¥—ã–π –æ—Ç–∑—ã–≤ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –≤ 250 —Ä—É–±–ª–µ–π + 1200 —Ä—É–±–ª–µ–π –∑–∞ —Ä–µ–∫–ª–∞–º—É –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö !üë®‚Äçüíª
‚ö°Ô∏è–¢–∞–∫–∂–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç avito , –æ—Ç 10000 —Ä—É–±–ª–µ–π   ‚ö°Ô∏è
üí∏–¶–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∑—ã–≤–æ–≤ ,  –ø—Ä–æ–¥–∞–∂ –∏ –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.üí∏


 üíå –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º-
üìå Telegram 
‚úâÔ∏è‚úâÔ∏è–ó–∞ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è !!‚úâÔ∏è‚úâÔ∏è"""

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
async def send_message_to_groups():
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram
    if not session_string:
        await client.start(phone=phone_number)
        new_session_string = client.session.save()
        logging.info("–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ—ë –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: ")
        logging.info(new_session_string)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤ (–≥—Ä—É–ø–ø –∏ —á–∞—Ç–æ–≤)
    async for dialog in client.iter_dialogs():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞ (supergroup –∏–ª–∏ –æ–±—ã—á–Ω–∞—è group)
        if dialog.is_group:
            logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É: {dialog.name}")
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
                await client.send_message(dialog.id, message)
                # –ü–∞—É–∑–∞ 20 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ —Å–ª–µ–¥—É—é—â—É—é –≥—Ä—É–ø–ø—É
                await asyncio.sleep(20)
            except Exception as e:
                logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {dialog.name}: {str(e)}")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–æ –≤—Å–µ –≥—Ä—É–ø–ø—ã
    await client.disconnect()
    logging.info("–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
with client:
    client.loop.run_until_complete(send_message_to_groups())